import json
import random
import os

# === BANCOS DE PALABRAS MEJORADOS ===

NAMES = [
    "Nexus", "Verve", "Aura", "Pulse", "Lume", "Strive", "Bloom", "Forge", "Echo", "Zenith",
    "Apex", "Orbit", "Vista", "Crest", "Motive", "Nova", "Trove", "Quill", "Rise", "Haven",
    "Flux", "Muse", "Kinetix", "Solis", "Aether", "Prism", "Vanta", "Lyra", "Onyx", "Cove",
    "CaseFile", "ShadowLine", "Verdict", "Clue", "Evidence", "Redacted", "ColdCase", "Dossier"
]

MISSION_TEMPLATES = [
    "Innovaci√≥n {adjective} en el sector {sector} para {audience}",
    "Transformar el {sector} con enfoque en {value1} y {value2}",
    "Soluciones {adjective} que empoderan a {audience}",
    "Reimaginar el futuro del {sector} mediante {value1}",
    "Experiencias {adjective} dise√±adas para {audience}",
    "Impulsar el crecimiento de {audience} con {value1} y {value2}",
    "Conectar a {audience} con el poder del {sector} {adjective}",
    "Liderar la revoluci√≥n {adjective} en {sector}",
    "Desentra√±ar los secretos del {sector} con precisi√≥n y estilo",
    "Documentar la verdad del {sector} para {audience}"
]

ADJECTIVES = [
    "inteligente", "sostenible", "√©tica", "accesible", "futura", "humana", "√°gil", "segura",
    "inclusiva", "eficiente", "creativa", "robusta", "transparente", "moderna", "confiable",
    "oscuro", "misterioso", "inmersivo", "cinematogr√°fico", "retro", "minimalista", "lujoso"
]

# Valores + Estilos de dise√±o integrados
VALUES_AND_STYLES = [
    # Valores gen√©ricos
    "innovaci√≥n", "tecnolog√≠a", "excelencia", "sostenibilidad", "naturaleza", "responsabilidad",
    "eco-friendly", "exclusividad", "elegancia", "calidad premium", "sofisticaci√≥n", "salud",
    "confianza", "profesionalismo", "empat√≠a", "seguridad", "crecimiento", "transparencia",
    "educaci√≥n", "accesibilidad", "diversi√≥n", "creatividad", "comunidad", "originalidad",
    "pasi√≥n", "rapidez", "frescura", "motivaci√≥n", "bienestar", "√©tica", "equidad", "rigor",
    "impacto", "autenticidad", "individualidad", "privacidad", "pureza", "eficacia", "estabilidad",
    
    # ESTILOS DE DISE√ëO EXPL√çCITOS (¬°clave para tu modelo!)
    "oscuro", "true crime", "archivo policial", "evidencia board", "tipograf√≠a serif",
    "texturas de papel envejecido", "minimalista", "ne√≥n cyberpunk", "retro a√±os 80",
    "lujoso dorado", "grunge", "futurista", "handwritten", "monocrom√°tico", "alto contraste",
    "ilustraciones detalladas", "fotograf√≠a en blanco y negro", "glitch art", "vintage",
    "glassmorphism", "brutalismo web", "dark academia", "color blocking", "tipograf√≠a display"
]

SECTORS = [
    "tecnolog√≠a", "salud", "finanzas", "educaci√≥n", "entretenimiento", "moda", "alimentos",
    "medio ambiente", "fitness", "dise√±o", "recursos humanos", "ciencia", "movilidad",
    "transporte", "automotriz", "arte", "m√∫sica", "pyme", "cosm√©tica", "agro", "legal",
    "judicial", "construcci√≥n", "ciberseguridad", "bienestar", "energ√≠a", "turismo",
    "log√≠stica", "retail", "telecomunicaciones", "farmac√©utico", "aeroespacial", "rob√≥tica",
    "ia", "blockchain", "gaming", "deportes", "ong", "gobierno", "true crime", "misterio",
    "periodismo", "historia", "forense"
]

AUDIENCES = [
    "empresas B2B", "consumidores conscientes", "clase alta", "pacientes", "empresas",
    "estudiantes", "j√≥venes", "creadores", "urbanos ocupados", "deportistas",
    "familias urbanas", "startups", "instituciones acad√©micas", "adultos mayores",
    "millennials", "emprendedores", "mujeres conscientes", "equipos de desarrollo",
    "clientes retail", "ni√±os de 6 a 12 a√±os", "ONGs", "gobiernos locales",
    "aficionados al misterio", "detectives aficionados", "comunidades de true crime"
]

# === FUNCI√ìN PRINCIPAL ===

def generate_synthetic_entry():
    sector = random.choice(SECTORS)
    audience = random.choice(AUDIENCES)
    adjective = random.choice(ADJECTIVES)
    value1, value2 = random.sample(VALUES_AND_STYLES, 2)
    
    # Generar nombre (m√°s tem√°tico si es true crime/misterio)
    if sector in ["true crime", "misterio", "forense", "judicial"]:
        name = random.choice([
            "CaseFile", "ShadowLine", "Verdict", "Clue", "Evidence", "Redacted", 
            "ColdCase", "Dossier", "TheTruth", "Unsolved", "ArchiveX", "BlackBox"
        ])
    else:
        base = random.choice(NAMES)
        suffix = random.choice(["Labs", "Studio", "Co", "Group", "Hub", ""])
        name = (base + suffix).strip()
    
    # Generar misi√≥n
    mission = random.choice(MISSION_TEMPLATES).format(
        adjective=adjective,
        sector=sector,
        audience=audience,
        value1=value1,
        value2=value2
    )
    
    # Generar 4-6 valores/estilos
    num_items = random.randint(4, 6)
    selected_items = random.sample(VALUES_AND_STYLES, num_items)
    
    return {
        "input": {
            "name": name,
            "mission": mission,
            "values": ", ".join(selected_items),
            "sector": sector,
            "audience": audience
        },
        "rating": round(random.uniform(0.75, 1.0), 2),
        "feedback": random.choice(["excelente", "muy bueno", "destacado", "inmersivo", "profesional", "aut√©ntico"])
    }

def generate_dataset(num_samples=200, output_path="data/synthetic_data.json"):
    print(f"üß† Generando {num_samples} ejemplos sint√©ticos con estilos de dise√±o...")
    
    data = []
    for _ in range(num_samples):
        data.append(generate_synthetic_entry())
    
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    
    with open(output_path, 'w', encoding='utf-8') as f:
        json.dump({"training_data": data, "feedback_data": []}, f, ensure_ascii=False, indent=2)
    
    print(f"‚úÖ Dataset guardado en: {output_path}")
    unique_sectors = set(entry['input']['sector'] for entry in data)
    print(f"üìä Sectores √∫nicos: {len(unique_sectors)} | Ej: {list(unique_sectors)[:5]}")

if __name__ == "__main__":
    generate_dataset(num_samples=300, output_path="data/synthetic_data.json")